name: MLOps Pipeline

on:
  push:
    branches:
      - main
      - master
  pull_request:
  workflow_dispatch:
    inputs:
      run_train:
        description: "Run training job"
        required: false
        default: "false"
      run_canary:
        description: "Run canary deploy"
        required: false
        default: "false"
      model_artifact_s3:
        description: "Model artifact S3 URI (required when run_canary=true)"
        required: false
        default: ""

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  SAGEMAKER_ENDPOINT_NAME: ${{ secrets.SAGEMAKER_ENDPOINT_NAME }}

jobs:
  smoke-test:
    name: Smoke Test (invoke endpoint)
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install boto3 sagemaker
      - name: Configure AWS creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Invoke serverless endpoint
        run: |
          python - <<'PY'
          import os, boto3
          rt = boto3.client("sagemaker-runtime", region_name=os.environ["AWS_REGION"])
          row = "3,1,34,0,0,7.8292,2"
          resp = rt.invoke_endpoint(
              EndpointName=os.environ["SAGEMAKER_ENDPOINT_NAME"],
              ContentType="text/csv",
              Accept="application/json",
              Body=row.encode("utf-8"),
          )
          print(resp["Body"].read().decode())
          PY

  train:
    if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.run_train == 'true' }}
    name: Train (manual)
    runs-on: ubuntu-latest
    needs: smoke-test
    permissions:
      contents: read
    env:
      SAGEMAKER_ROLE_ARN: ${{ secrets.SAGEMAKER_ROLE_ARN }}
      S3_BUCKET: ${{ secrets.S3_BUCKET }}
      S3_TRAIN_DATA: ${{ secrets.S3_TRAIN_DATA }}
      S3_VAL_DATA: ${{ secrets.S3_VAL_DATA }}
      PROJECT_PREFIX: titanic-mlops
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install boto3 sagemaker
      - name: Configure AWS creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Run training (XGBoost)
        id: train
        run: |
          python cicd/train_job.py | tee train_output.txt
          ARTIFACT=$(grep -oE 'MODEL_ARTIFACT_S3=s3://[^ ]+' train_output.txt | sed 's/^MODEL_ARTIFACT_S3=//')
          echo "artifact=$ARTIFACT" >> $GITHUB_OUTPUT
      - name: Show model artifact
        run: echo "Trained model: ${{ steps.train.outputs.artifact }}"

  canary-deploy:
    if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.run_canary == 'true' }}
    name: Canary Deploy (manual)
    runs-on: ubuntu-latest
    needs: smoke-test
    permissions:
      contents: read
    env:
      SAGEMAKER_ROLE_ARN: ${{ secrets.SAGEMAKER_ROLE_ARN }}
      MODEL_ARTIFACT_S3: ${{ github.event.inputs.model_artifact_s3 }}
      CANARY_WEIGHT: "0.1"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install boto3 sagemaker
      - name: Configure AWS creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Validate model artifact
        run: |
          if [ -z "${MODEL_ARTIFACT_S3}" ]; then
            echo "ERROR: MODEL_ARTIFACT_S3 is required. Provide it in the workflow input when dispatching canary."
            exit 1
          fi
          echo "Using MODEL_ARTIFACT_S3=${MODEL_ARTIFACT_S3}"
      - name: Canary deploy (10%)
        run: |
          python cicd/deploy_canary.py

